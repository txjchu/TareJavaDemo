<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<!-- 定义dbcp连接文件 -->
	<bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource" autowire="default">
		<property name="username" value="chris"></property>
		<property name="password" value="123456"></property>
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
	</bean>
	
	<!-- 定义SqlSessionFactoryBean (SqlSessionFactoryBean只能一个一个地创建Dao)-->
	<bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入连接信息 -->
		<!-- setter注入形式 -->
		<property name="dataSource" ref="dbcp"></property>
		<!-- 注入SQL定义文件信息 (加载多个SQL文件的方法,classpath代表着绝对路径，从src下开始找)-->
		<property name="mapperLocations" value="classpath:org/tarena/sql/*.xml"></property>
	</bean>
	<!-- 按指定包扫描接口，批量生成接口实现对象，采用接口名首字母小写当id -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描org.tarena.dao包下所有的接口 -->
		<property name="basePackage" value="org.tarena.dao"></property>
		
		<!-- 指定带有自定义注解@MyBatisDao的接口才生成实现对象 
				二重限定：使扫描条件变成且关系，必须满足两个条件。-->
		<property name="annotationClass" value="org.tarena.util.MyBatisDao"></property>
		
		<!-- 注入sqlsessionfactory -->
		<property name="sqlSessionFactory" ref="ssf"></property>
	</bean>
	
	<!-- 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.tarena.dao"></property>
		<property name="sqlSessionFactory" ref="ssf"></property>
	</bean>
	 -->
	<!-- 根据AdminDao接口创建实现对象 -->
	<bean id="adminDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<!-- 注入sqlsessionfactory -->
		<property name="sqlSessionFactory" ref="ssf"></property>
		<!-- 注入dao接口 -->
		<property name="mapperInterface" value="org.tarena.dao.AdminDao"></property>
	</bean>
	
</beans>