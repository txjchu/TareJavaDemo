1.spring是什么?
	轻量级的集成开发框架
	(1)轻量级
		相对于ejb,spring不依赖于应用服务器。
	(2)集成
		spring为软件开发提供了一套整合的机制,
		可以将其它的一些框架(比如mybatis,hibernate)
		等很方便的集成进来。
	(3)框架
		spring帮我们管理对象和对象之间的关系。
		我们可以依据spring来开发松耦合的应用程序。

2.如何使用spring
	(1)启动spring容器
		step1,创建一个web工程。
		step2,引入spring相关的jar包。
		step3,添加spring的配置文件
					applicationContext.xml
		step4,写一个java类，比如Test。
	(2)使用spring容器来管理对象。
		1)获得对象
			注:
				什么是javabean?
					一个java类如果满足如下几个条件:
					有不带参的构造器
					有属性及对应的get/set方法
					实现了序列化接口( Serializable)
			比如:
				getBean("dog1",Dog.class);
		2)bean的作用域
			a.容器在默认情况下，每一个bean的定义，会创建
			一个对应的实例。
			b.作用域
				singleton: 单例(缺省值)。
				prototype: 创建多个实例。
		3)生命周期
			可以配置一些方法来管理bean的生命周期:
			容器在创建好bean实例之后，会调用
			init-method指定的方法来完成初始化，
			容器在关闭之前，会调用detroy-method	
			指定的方法。
			注:
				a.只有当scope="singleton"时，才能
				使用destroy-method。
				b.初始化方法和销毁方法只会执行一次。
		 4)延迟实例化
		 	 a.spring容器启动之后，会将所有的
		 	 scope="singleton"的bean实例化。
		 	 b.如果设置lazy-init="true"，容器
		 	 在启动时，就不会将scope="singleton"	
		 	 的bean实例化了。

3.IOC(控制反转)
	(1)什么是IOC?
		指程序中对象的获取方式发生反转，
		由最初的new方式创建，转变为由第三方框架
		创建。
	(2)什么是DI(依赖注入)
		对象之间的关系交给容器来管理。
	(3)依赖注入的方式
		1)set方式来注入
			容器首先调用bean的不带参的构造器创建
			实例，然后调用该实例的set方法来完成注入。
		2)构造器的方式来注入
			容器会调用对应的构造器来完成注入。
		
	
	
	
	
	
	
		注：
		 工厂模式
			a.设计模式
				为了解决常见的问题而提出的一套解决方案。
			b.简单工厂模式
				工厂类负责创建各种产品,客户端只需要调用
				工厂类的方法就可以获得对应的产品。
						
					
				
					
		
		
		
	
	
	
				








		